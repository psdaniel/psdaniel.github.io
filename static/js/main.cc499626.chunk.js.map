{"version":3,"sources":["assets/backgroundImg.png","styles/global.ts","services/api.ts","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","api","axios","create","baseURL","Container","styled","div","backgroundImg","Header","CardContainer","Card","Dashboard","props","state","pokemons","pokemonsCount","page","offset","Number","this","get","response","setState","data","results","fetchPokemon","event","value","Pagination","onChange","e","handlePagination","count","color","style","margin","map","pokemon","k","key","alt","src","width","name","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,2C,+oBCE5BC,kBAAf,K,wECIeC,E,OAJHC,EAAMC,OAAO,CACrBC,QAAS,+B,whDCCN,IAAMC,EAAYC,IAAOC,IAAV,IAYIC,KAWbC,EAASH,IAAOC,IAAV,KASNG,EAAgBJ,IAAOC,IAAV,KAgBbI,EAAOL,IAAOC,IAAV,KC9BIK,E,kDACnB,WAAYC,GAAgB,IAAD,8BACzB,cAAMA,IAEDC,MAAQ,CACXC,SAAU,GACVC,cAAe,GACfC,KAAM,GANiB,E,oLAWnBC,EAAmC,GAA1BC,OAAOC,KAAKN,MAAMG,MAAa,G,SAEvBhB,EAAIoB,IAAJ,yBAA0BH,EAA1B,c,OAAjBI,E,OAENF,KAAKG,SAAS,CACZR,SAAUO,EAASE,KAAKC,U,0QAKpBL,KAAKM,e,sLAGUC,EAAYC,G,wEACjCR,KAAKG,SAAS,CAAEN,KAAMW,I,SAChBR,KAAKM,e,wIAGH,IAAD,OACMN,KAAKN,MAAMG,KAExB,OACE,oCACE,kBAACZ,EAAD,KACE,kBAACI,EAAD,KACE,wCAEF,kBAACoB,EAAA,EAAD,CAAYC,SAAU,SAACC,EAAGH,GAAJ,OAAc,EAAKI,iBAAiBD,EAAGH,IAAQX,KAAME,OAAOC,KAAKN,MAAMG,MAAOgB,MAAOb,KAAKN,MAAME,cAAekB,MAAM,UAAUC,MAAO,CAAEC,OAAQ,UACtK,kBAAC1B,EAAD,KACGU,KAAKN,MAAMC,SAASsB,KAAI,SAACC,EAASC,GAAV,OACvB,kBAAC5B,EAAD,CAAM6B,IAAKD,GACT,6BACE,yBACEE,IAAI,UACJC,IAAK,wDAAkD,IAAMvB,OAAO,EAAKL,MAAMG,MAAQ,GAAMsB,EAAI,GAAM,OACvGI,MAAO,MAET,4BAAK,EAAK7B,MAAMC,SAASwB,GAAGK,kB,GAjDPC,aCTxBC,EAPO,kBACpB,oCACI,kBAAC,EAAD,MACF,kBAAC,EAAD,QCLJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.cc499626.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backgroundImg.a9f3834e.png\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n        outline: 0;\r\n    }\r\n\r\n    body {\r\n        background: #312E38;\r\n        color: #FFF;\r\n        -webkit-font-smoothing: antialiased;\r\n    }\r\n\r\n    body, input, button {\r\n        font-family: 'Roboto Slab', serif;\r\n        font-size: 16px;\r\n    }\r\n\r\n    h1, h2, h3, h4, h5, h6, strong {\r\n        font-weight: 500;\r\n    }\r\n\r\n    button {\r\n        cursor: pointer;\r\n    }\r\n`;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://pokeapi.co/api/v2/',\r\n});\r\n\r\nexport default api;","import styled from 'styled-components';\r\n\r\nimport backgroundImg from '../../assets/backgroundImg.png';\r\n\r\nexport const Container = styled.div`\r\n\r\n    min-height: 100vh;\r\n    min-width: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    \r\n\r\n    &::after {\r\n        content: \"\";\r\n        background: url(${backgroundImg}) no-repeat center;\r\n        opacity: 0.1;\r\n        top: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        position: absolute;\r\n        z-index: -1;   \r\n    }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n    text-align: center;\r\n\r\n    h1 {\r\n        text-transform: uppercase;\r\n        color: #FFDE00;\r\n    }\r\n`;\r\n\r\nexport const CardContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    grid-gap: 1rem;\r\n    width: 55rem;\r\n\r\n    overflow-y: scroll;\r\n    max-height: 75vh;\r\n\r\n    &::-webkit-scrollbar {\r\n        display: none;\r\n      }\r\n\r\n\r\n`;\r\n\r\nexport const Card = styled.div`\r\n    box-shadow: 0 8px 6px -6px black;\r\n    background-color: #3B4CCA;\r\n    border-radius: 8px;\r\n    padding: .5rem;\r\n    margin-bottom: 1rem;\r\n    opacity: 0.8;\r\n\r\n    \r\n    transition: transform 0.25s ease-out;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        transform: scale(1.05);\r\n    }\r\n\r\n    \r\n\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    h2 {\r\n        text-transform: uppercase;\r\n        font-family: Roboto, sans-serif;\r\n        text-shadow: 8px 6px -6px black;\r\n        color: #FFDE00;\r\n    }\r\n    \r\n`;","import React, { Component } from 'react';\r\nimport { Pagination } from '@material-ui/lab';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport { Container, Header, CardContainer, Card } from './styles';\r\n\r\ninterface IProps {\r\n  id?: string\r\n}\r\n\r\ninterface IState {\r\n  pokemons: Array<any>,\r\n  page: Number,\r\n  pokemonsCount: any,\r\n}\r\n\r\ninterface IType {\r\n  typeInfo: any;\r\n  type: any;\r\n}\r\n\r\nexport default class Dashboard extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pokemons: [],\r\n      pokemonsCount: 20,\r\n      page: 1\r\n    };\r\n  }\r\n\r\n  async fetchPokemon() {\r\n    const offset = Number(this.state.page) * 20 - 20;\r\n\r\n    const response = await api.get(`pokemon?offset=${offset}&limit=20`);\r\n\r\n    this.setState({\r\n      pokemons: response.data.results\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.fetchPokemon();\r\n  }\r\n\r\n  async handlePagination(event: any, value: any) {\r\n    this.setState({ page: value });\r\n    await this.fetchPokemon();\r\n  }\r\n\r\n  render() {\r\n    const page = this.state.page;\r\n\r\n    return (\r\n      <>\r\n        <Container>\r\n          <Header>\r\n            <h1>Pokedex</h1>\r\n          </Header>\r\n          <Pagination onChange={(e, value) => this.handlePagination(e, value)} page={Number(this.state.page)} count={this.state.pokemonsCount} color='primary' style={{ margin: '10px' }} />\r\n          <CardContainer>\r\n            {this.state.pokemons.map((pokemon, k) => (\r\n              <Card key={k}>\r\n                <div>\r\n                  <img\r\n                    alt='monster'\r\n                    src={`https://pokeres.bastionbot.org/images/pokemon/${(20 * (Number(this.state.page) - 1)) + k + 1}` + \".png\"}\r\n                    width={100}\r\n                  />\r\n                  <h2>{this.state.pokemons[k].name}</h2>\r\n                </div>\r\n              </Card>\r\n            ))}\r\n          </CardContainer>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\n\nimport GlobalStyle from './styles/global';\n\nimport Dashboard from './pages/Dashboard';\n\nconst App: React.FC = () => (\n  <>\n      <Dashboard />\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}